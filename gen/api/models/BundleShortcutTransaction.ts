/* tslint:disable */
/* eslint-disable */
/**
 * #### Enso API - Find detailed documentation on [docs.enso.finance](https://docs.enso.finance). - To use the API, **you must include your API Key in the Authorization header** (Bearer format). - For testing, Swagger pre-authorizes you using the key: `1e02632d-6feb-4a75-a157-documentation` (1rps). - Get your own API Key at [enso.finance/developers](https://enso.finance/developers).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ActionToBundle } from "./ActionToBundle";
import {
  ActionToBundleFromJSON,
  ActionToBundleFromJSONTyped,
  ActionToBundleToJSON,
} from "./ActionToBundle";
import type { Transaction } from "./Transaction";
import {
  TransactionFromJSON,
  TransactionFromJSONTyped,
  TransactionToJSON,
} from "./Transaction";

/**
 * @export
 * @interface BundleShortcutTransaction
 */
export interface BundleShortcutTransaction {
  /**
   * @type {Array<ActionToBundle>}
   * @memberof BundleShortcutTransaction
   */
  bundle: Array<ActionToBundle>;
  /**
   * @type {object}
   * @memberof BundleShortcutTransaction
   */
  gas: object;
  /**
   * Block number the transaction was created on
   * @type {number}
   * @memberof BundleShortcutTransaction
   */
  createdAt: number;
  /**
   * The tx object to use in `ethers`
   * @type {Transaction}
   * @memberof BundleShortcutTransaction
   */
  tx: Transaction;
}

/**
 * Check if a given object implements the BundleShortcutTransaction interface.
 */
export function instanceOfBundleShortcutTransaction(
  value: object,
): value is BundleShortcutTransaction {
  if (!("bundle" in value) || value["bundle"] === undefined) return false;
  if (!("gas" in value) || value["gas"] === undefined) return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  if (!("tx" in value) || value["tx"] === undefined) return false;
  return true;
}

export function BundleShortcutTransactionFromJSON(
  json: any,
): BundleShortcutTransaction {
  return BundleShortcutTransactionFromJSONTyped(json, false);
}

export function BundleShortcutTransactionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): BundleShortcutTransaction {
  if (json == null) {
    return json;
  }
  return {
    "bundle": ((json["bundle"] as Array<any>).map(ActionToBundleFromJSON)),
    "gas": json["gas"],
    "createdAt": json["createdAt"],
    "tx": TransactionFromJSON(json["tx"]),
  };
}

export function BundleShortcutTransactionToJSON(
  value?: BundleShortcutTransaction | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    "bundle": ((value["bundle"] as Array<any>).map(ActionToBundleToJSON)),
    "gas": value["gas"],
    "createdAt": value["createdAt"],
    "tx": TransactionToJSON(value["tx"]),
  };
}
