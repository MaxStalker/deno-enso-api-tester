/* tslint:disable */
/* eslint-disable */
/**
 * #### Enso API - Find detailed documentation on [docs.enso.finance](https://docs.enso.finance). - To use the API, **you must include your API Key in the Authorization header** (Bearer format). - For testing, Swagger pre-authorizes you using the key: `1e02632d-6feb-4a75-a157-documentation` (1rps). - Get your own API Key at [enso.finance/developers](https://enso.finance/developers).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * @export
 * @interface Quote
 */
export interface Quote {
  /**
   * @type {string}
   * @memberof Quote
   */
  gas: string;
  /**
   * @type {object}
   * @memberof Quote
   */
  amountOut: object;
  /**
   * Price impact in basis points, null if USD price not found
   * @type {number}
   * @memberof Quote
   */
  priceImpact: number;
  /**
   * An array of the fee amount collected for each tokenIn
   * @type {Array<string>}
   * @memberof Quote
   */
  feeAmount: Array<string>;
}

/**
 * Check if a given object implements the Quote interface.
 */
export function instanceOfQuote(value: object): value is Quote {
  if (!("gas" in value) || value["gas"] === undefined) return false;
  if (!("amountOut" in value) || value["amountOut"] === undefined) return false;
  if (!("priceImpact" in value) || value["priceImpact"] === undefined) {
    return false;
  }
  if (!("feeAmount" in value) || value["feeAmount"] === undefined) return false;
  return true;
}

export function QuoteFromJSON(json: any): Quote {
  return QuoteFromJSONTyped(json, false);
}

export function QuoteFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Quote {
  if (json == null) {
    return json;
  }
  return {
    "gas": json["gas"],
    "amountOut": json["amountOut"],
    "priceImpact": json["priceImpact"],
    "feeAmount": json["feeAmount"],
  };
}

export function QuoteToJSON(value?: Quote | null): any {
  if (value == null) {
    return value;
  }
  return {
    "gas": value["gas"],
    "amountOut": value["amountOut"],
    "priceImpact": value["priceImpact"],
    "feeAmount": value["feeAmount"],
  };
}
