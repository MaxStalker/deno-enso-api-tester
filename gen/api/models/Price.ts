/* tslint:disable */
/* eslint-disable */
/**
 * #### Enso API - Find detailed documentation on [docs.enso.finance](https://docs.enso.finance). - To use the API, **you must include your API Key in the Authorization header** (Bearer format). - For testing, Swagger pre-authorizes you using the key: `1e02632d-6feb-4a75-a157-documentation` (1rps). - Get your own API Key at [enso.finance/developers](https://enso.finance/developers).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * @export
 * @interface Price
 */
export interface Price {
  /**
   * @type {number}
   * @memberof Price
   */
  decimals: number;
  /**
   * @type {number}
   * @memberof Price
   */
  price: number;
  /**
   * @type {string}
   * @memberof Price
   */
  address: string;
  /**
   * @type {string}
   * @memberof Price
   */
  symbol: string;
  /**
   * @type {number}
   * @memberof Price
   */
  confidence: number;
  /**
   * @type {number}
   * @memberof Price
   */
  timestamp: number;
  /**
   * @type {number}
   * @memberof Price
   */
  chainId: number;
}

/**
 * Check if a given object implements the Price interface.
 */
export function instanceOfPrice(value: object): value is Price {
  if (!("decimals" in value) || value["decimals"] === undefined) return false;
  if (!("price" in value) || value["price"] === undefined) return false;
  if (!("address" in value) || value["address"] === undefined) return false;
  if (!("symbol" in value) || value["symbol"] === undefined) return false;
  if (!("confidence" in value) || value["confidence"] === undefined) {
    return false;
  }
  if (!("timestamp" in value) || value["timestamp"] === undefined) return false;
  if (!("chainId" in value) || value["chainId"] === undefined) return false;
  return true;
}

export function PriceFromJSON(json: any): Price {
  return PriceFromJSONTyped(json, false);
}

export function PriceFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Price {
  if (json == null) {
    return json;
  }
  return {
    "decimals": json["decimals"],
    "price": json["price"],
    "address": json["address"],
    "symbol": json["symbol"],
    "confidence": json["confidence"],
    "timestamp": json["timestamp"],
    "chainId": json["chainId"],
  };
}

export function PriceToJSON(value?: Price | null): any {
  if (value == null) {
    return value;
  }
  return {
    "decimals": value["decimals"],
    "price": value["price"],
    "address": value["address"],
    "symbol": value["symbol"],
    "confidence": value["confidence"],
    "timestamp": value["timestamp"],
    "chainId": value["chainId"],
  };
}
